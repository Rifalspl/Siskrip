/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package siskrip;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;


public class FormNotifikasiOtomatis extends javax.swing.JFrame {

    /**
     * Creates new form FormNotifikasiOtomatis
     */
    public FormNotifikasiOtomatis() {
        initComponents();
        setLocationRelativeTo(null);
        String nimLogin = null;
        tampilkanNotifikasi(nimLogin);
        tampilkanNotifTerbaru(nimLogin);
    }
    
    private void tampilkanNotifikasi(String nimLogin) {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID");
    model.addColumn("Tipe");
    model.addColumn("Pesan");
    model.addColumn("Waktu");
    model.addColumn("Status");

    try {
        Connection conn = Koneksi.getConnection();
        String sql = "SELECT id_notif, tipe, pesan, waktu, status_baca FROM notifikasi WHERE nim=? ORDER BY waktu DESC";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, nimLogin); // nim/dosen/username login
        ResultSet rs = pst.executeQuery();

        while (rs.next()) {
            String status = rs.getInt("status_baca") == 0 ? "Belum Dibaca" : "Sudah Dibaca";
            model.addRow(new Object[]{
                rs.getInt("id_notif"),
                rs.getString("tipe"),
                rs.getString("pesan"),
                rs.getString("waktu"),
                status
            });
        }
        tblNotif.setModel(model);
        rs.close();
        pst.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Gagal menampilkan notifikasi: " + ex.getMessage());
    }
}

    private void tampilkanNotifTerbaru(String nimLogin) {
    try {
        Connection conn = Koneksi.getConnection();
        String sql = "SELECT pesan FROM notifikasi WHERE nim=? AND status_baca=0 ORDER BY waktu DESC LIMIT 1";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, nimLogin);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            lblNotif.setText("ðŸ”” " + rs.getString("pesan"));
        } else {
            lblNotif.setText("Tidak ada notifikasi baru.");
        }
        rs.close();
        pst.close();
    } catch (SQLException ex) {
        lblNotif.setText("Gagal memuat notifikasi.");
    }
}
public void kirimNotifikasi(String nim, String pesan) {
    try {
        Connection conn = Koneksi.getConnection();
        String sql = "INSERT INTO notifikasi (nim, tipe, pesan, waktu, status_baca) VALUES (?, 'info', ?, NOW(), 0)";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, nim);
        pst.setString(2, pesan);
        pst.executeUpdate();
        pst.close();
    } catch (SQLException ex) {
        System.out.println("Gagal kirim notifikasi: " + ex.getMessage());
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNotif = new javax.swing.JTable();
        lblNotif = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblNotif.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblNotif);

        lblNotif.setText("jLabel1");

        jButton1.setText("REFRESH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNotif, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jButton1)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(lblNotif)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nimLogin = null;

    tampilkanNotifikasi(nimLogin);
    tampilkanNotifTerbaru(nimLogin);

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormNotifikasiOtomatis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormNotifikasiOtomatis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormNotifikasiOtomatis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormNotifikasiOtomatis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormNotifikasiOtomatis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNotif;
    private javax.swing.JTable tblNotif;
    // End of variables declaration//GEN-END:variables
}
